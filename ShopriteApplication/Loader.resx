<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>