<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>